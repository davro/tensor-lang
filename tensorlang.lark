%import common.WS
%ignore WS

// Program Structure
start: program
program: (statement)*
statement: let_binding | expr

// Bindings
let_binding: "let" NAME [":" type] "=" expr

// Expressions
expr: tensor_literal 
    | fill_call 
    | matmul_call 
    | add_call 
    | minus_call
    | mult_call
    | div_call
    | relu_call
    | sigmoid_call
    | tanh_call
    | softmax_call
    | sum_call
    | mean_call
    | max_call
    | min_call
    | argmax_call
    | argmin_call
    | greater_call
    | less_call
    | equal_call
    | linear_call
    | layer_norm_call
    | batch_norm_call
    | instance_norm_call
    | cross_entropy_call
    | mse_loss_call
    | transpose_call
    | reshape_call
    | concat_call
    | slice_expr
    | NAME

// Types
type: "Tensor" "[" dtype "," shape "]"
dtype: "f32" | "f64"
shape: "(" NUMBER ("," NUMBER)* [","] ")"

// Expression Definitions
tensor_literal: "[" (NUMBER ("," NUMBER)* | inner_array ("," inner_array)*) "]"
inner_array: "[" NUMBER ("," NUMBER)* "]"
fill_call: "fill" "(" NUMBER "," shape ")"
matmul_call: "matmul" "(" NAME "," NAME ")"
add_call: "add" "(" NAME "," NAME ")"
minus_call: "minus" "(" NAME "," NAME ")"
mult_call: "mult" "(" NAME "," NAME ")"
div_call: "div" "(" NAME "," NAME ")"
relu_call: "relu" "(" NAME ")"

// Activation functions
sigmoid_call: "sigmoid" "(" NAME ")"
tanh_call: "tanh" "(" NAME ")"
softmax_call: "softmax" "(" NAME ["," "axis" "=" NUMBER] ")"

// Comparison operations
greater_call: "greater" "(" NAME "," NAME ")"
less_call: "less" "(" NAME "," NAME ")"
equal_call: "equal" "(" NAME "," NAME ")"

// Neural network layers
linear_call: "linear" "(" NAME "," NAME "," NAME ")"

// Normalization operations
layer_norm_call: "layer_norm" "(" NAME ["," "axis" "=" NUMBER] ["," "eps" "=" NUMBER] ")"
batch_norm_call: "batch_norm" "(" NAME "," NAME "," NAME ["," "eps" "=" NUMBER] ")"
instance_norm_call: "instance_norm" "(" NAME ["," "eps" "=" NUMBER] ")"

// Loss functions
cross_entropy_call: "cross_entropy" "(" NAME "," NAME ")"
mse_loss_call: "mse_loss" "(" NAME "," NAME ")"

// Advanced tensor operations
transpose_call: "transpose" "(" NAME ["," "axes" "=" "(" NUMBER ("," NUMBER)* ")"] ")"
reshape_call: "reshape" "(" NAME "," shape ")"
concat_call: "concat" "(" NAME "," NAME "," "axis" "=" NUMBER ")"

// Tensor slicing
slice_expr: NAME "[" slice_spec ("," slice_spec)* "]"
slice_spec: slice_range | NUMBER | ":"
slice_range: NUMBER ":" NUMBER | ":" NUMBER | NUMBER ":"

// Reduction operations
sum_call: "sum" "(" NAME ["," "axis" "=" NUMBER] ")"
mean_call: "mean" "(" NAME ["," "axis" "=" NUMBER] ")"
max_call: "max" "(" NAME ["," "axis" "=" NUMBER] ")"
min_call: "min" "(" NAME ["," "axis" "=" NUMBER] ")"
argmax_call: "argmax" "(" NAME ["," "axis" "=" NUMBER] ")"
argmin_call: "argmin" "(" NAME ["," "axis" "=" NUMBER] ")"

// Tokens 
NAME: /[a-zA-Z_][a-zA-Z0-9_]*/
NUMBER: /-?\d+(\.\d+)?/

// Comments
%ignore /\/\/[^\n]*/         // Single-line comments
%ignore /\/\*[\s\S]*?\*\//   // Multi-line comments